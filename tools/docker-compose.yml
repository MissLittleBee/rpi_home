version: "3.9"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
      - ../nginx/cert:/etc/ssl/private:ro
    networks:
      - internal
    deploy:
      restart_policy:
        condition: on-failure

  db:
    image: mariadb:10.11
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
    volumes:
      - ../volumes/nextcloud/db:/var/lib/mysql
    secrets:
      - db_root_password
      - db_password
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
    networks:
      - internal

  app:
    image: nextcloud:stable
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
    depends_on:
      - db
    volumes:
      - ../volumes/nextcloud/html:/var/www/html
      - ../volumes/nextcloud/data:/var/www/html/data
      - ${VIDEO_PATH}:/var/www/html/data/${NEXTCLOUD_USER}/files/Videos
      - ${IMAGE_PATH}:/var/www/html/data/${NEXTCLOUD_USER}/files/Photos
      - ${DOC_PATH}:/var/www/html/data/${NEXTCLOUD_USER}/files/Documents
    secrets:
      - db_password
    user: "33:${MEDIA_GID:-1001}" # www-data user with media group
    environment:
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD_FILE=/run/secrets/db_password
      - MYSQL_HOST=db
      - OVERWRITEHOST=${HOSTNAME}
      - OVERWRITEPROTOCOL=https
      - OVERWRITEWEBROOT=/nextcloud
      - TRUSTED_PROXIES=10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${HOSTNAME}
    networks:
      - internal

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    ports:
      - "8123:8123"
    volumes:
      - ../volumes/homeassistant/config:/config
      - ../volumes/homeassistant/data:/config/deps
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=${TIMEZONE}
      - ENABLE_IPV6=false
      - SUPERVISOR_SHARE=/share
    networks:
      - internal
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  plex:
    image: linuxserver/plex:latest
    ports:
      - "32400:32400/tcp" # Web API Plex
      - "1900:1900/udp" # DLNA
      - "3005:3005/tcp" # Plex Companion
      - "8324:8324/tcp" # Roku via Plex Companion
      - "32469:32469/tcp" # Plex DLNA Server
      - "32410:32410/udp" # GDM network discovery
      - "32412:32412/udp" # GDM network discovery
      - "32413:32413/udp" # GDM network discovery
      - "32414:32414/udp" # GDM network discovery
    volumes:
      - ../volumes/plex/config:/config
      - ${VIDEO_PATH}:/media/videos:ro
    environment:
      - PUID=${HOST_UID:-1000}
      - PGID=${MEDIA_GID:-1001}
      - TZ=${TIMEZONE}
      - VERSION=docker
      - PLEX_CLAIM= # chooseable - plex.tv/claim
    networks:
      - internal
    deploy:
      restart_policy:
        condition: on-failure

  webshare-search:
    image: rpi_home_webshare-search:latest
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
    ports:
      - "5000:5000/tcp"
    volumes:
      - ${VIDEO_PATH}:/downloads
    env_file:
      - .env
    environment:
      - PORT=5000
      - DEBUG=false
      - DOWNLOAD_PATH=/downloads
    user: "${HOST_UID:-1000}:${MEDIA_GID:-1001}" # Run with media group for proper file permissions
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  internal:
    driver: overlay

secrets:
  db_root_password:
    external: true
  db_password:
    external: true
